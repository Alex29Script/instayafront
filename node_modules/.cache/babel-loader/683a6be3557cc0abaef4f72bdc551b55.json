{"ast":null,"code":"var _jsxFileName = \"/user/src/app/src/pages/listadoOrdenes/Prueba.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst uri = \"http://localhost:8080/\";\n\n/*\r\n// buscar una guia\r\n//prueba guia n 637c2641574384689ace7662\r\n// usuario geraldine\r\n\r\nexport const Prueba =  () => {\r\n    const buscarguia=async (e)=>{\r\n        e.preventDefault();\r\n        const guia={};\r\n        guia.username=\"geraldine\";\r\n        guia.id_guia=document.getElementById(\"trackNumber\").value;\r\n        console.log(guia);\r\n        await fetch(`${uri}guia/buscar/?username=${guia.username}&id_guia=${guia.id_guia}`,{\r\n        headers:{\"Content-Type\":\"application/json\"},\r\n        mode: 'cors',\r\n        method:\"get\",\r\n        }).then(res=> res.json())\r\n        .then(res=> {console.log(res)})\r\n        \r\n\r\n    }\r\n    return (\r\n    <>\r\n    <input id=\"trackNumber\" type=\"text\"></input>\r\n    <button onClick={buscarguia}>click</button>\r\n    \r\n    </>\r\n    );\r\n};\r\n\r\n*/\n\n/*\r\n//buscar la espesifica de un usuario especifico\r\nexport const Prueba=()=>{\r\n    const buscarguias=async (e)=>{\r\n        e.preventDefault();\r\n        const username=\"alex32api\";\r\n        await fetch(`http://localhost:8080/guias/todas/?username=${username}`,{\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            mode: 'cors',\r\n            method:\"get\",\r\n            }).then(res=> res.json())\r\n            .then(res=> {console.log(res)})\r\n        \r\n\r\n    }\r\n    return (\r\n    <>\r\n    <button onClick={buscarguias}>Buscar todas las guias </button>\r\n    </>\r\n    );\r\n}\r\n*/\n\n// login de usuario\n/*\r\nexport function Prueba(){\r\n    const  login= async (e)=>{\r\n        e.preventDefault();\r\n        const user={};\r\n        user.username=document.getElementById(\"username\").value;\r\n        user.pass=document.getElementById(\"pass\").value;\r\n        console.log(user)\r\n        await fetch(`${uri}login`,{\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            mode: 'cors',\r\n            method:\"post\",\r\n            body:JSON.stringify(user)\r\n            }).then(res=> res.json())\r\n            .then(res=> {console.log(res)})\r\n    }\r\n    return(\r\n        <>\r\n        <form>\r\n            <label htmlFor=\"username\"> nombre de usuario </label>\r\n            <input type=\"text\" id=\"username\" />\r\n            <label htmlFor=\"pass\"> contrase√±a </label>\r\n            <input type=\"password\" id=\"pass\" />\r\n            <button onClick={login}> enviar</button>\r\n        </form>\r\n               \r\n        </>\r\n\r\n\r\n    )\r\n\r\n}\r\n/*\r\n\r\n\r\n\r\n/*\r\n// registrar una orden\r\nexport const Prueba=()=>{\r\n    const  info_form= async (e)=>{\r\n        e.preventDefault();\r\n\r\n        const guia={};\r\n        guia.username=\"alex32api\"\r\n        guia.nit=document.getElementById(\"nit\").value;\r\n        guia.fecha=document.getElementById(\"fecha\").value;\r\n        guia.dir_recogida=document.getElementById(\"dir_recogida\").value;\r\n        guia.ciudad_recogida=document.getElementById(\"dir\").value;\r\n        guia.largo=document.getElementById(\"largo\").value;\r\n        guia.ancho=document.getElementById(\"ancho\").value;\r\n        guia.alto=document.getElementById(\"alto\").value;\r\n        guia.peso=document.getElementById(\"peso\").value;\r\n        guia.nombre_des=document.getElementById(\"nombre_des\").value;\r\n        guia.nit_des=document.getElementById(\"nit_des\").value;\r\n        guia.dir_des=document.getElementById(\"dir_des\").value;\r\n        guia.ciudad_des=document.getElementById(\"ciudad_des\").value;\r\n        guia.estado=\"Guardado\";\r\n        console.log(document.getElementById(\"delicado\").value)\r\n        if (document.getElementById(\"delicado\").value==\"true\"){\r\n            guia.delicado=true\r\n        }else{\r\n            guia.delicado=false\r\n        }\r\n\r\n        console.log(guia)\r\n        await fetch(`${uri}guia/agregar`,{\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            mode: 'cors',\r\n            method:\"post\",\r\n            body:JSON.stringify({guia})\r\n            }).then(res=> res.json())\r\n            .then(res=> {console.log(res)})\r\n\r\n    }  \r\n    return(\r\n        <>\r\n            <form id=\"form_guia\" > \r\n                <p>\r\n                    <label htmlFor=\"nit\">NIT del Remitente:</label>\r\n                    <input type=\"text\" id=\"nit\" name=\"nit\"/>\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"fecha\">Fecha de Recogida </label>\r\n                    <input type=\"datetime-local\" id=\"fecha\" name=\"fecha\"/>\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"dir\">Direccion de Recogida</label>\r\n                    <input type=\"text\" id=\"dir\" name=\"dir\" />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"dir_recogida\">Ciudad de Recogida </label>\r\n                    <input type=\"text\" id=\"dir_recogida\" name=\"dir_recogida\" />\r\n                </p>\r\n                <br></br>\r\n                <br></br>\r\n                <p>Medidas y especificaciones</p>\r\n                <p>\r\n                    <label htmlFor=\"largo\">largo:</label>\r\n                    <input type=\"number\" id=\"largo\" min=\"1\"  name=\"largo\"/>\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"ancho\">ancho:</label>\r\n                    <input type=\"number\" id=\"ancho\"  min=\"1\" name=\"ancho\"/>\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"alto\">alto</label>\r\n                    <input type=\"number\" id=\"alto\" min=\"1\" />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"peso\">peso (Kg)</label>\r\n                    <input type=\"number\" id=\"peso\" min=\"1\" name=\"peso\"/>\r\n                </p>\r\n\r\n              \r\n                <select name=\"delicado\" id=\"delicado\">\r\n                    <option value=\"true\">Delicado</option>\r\n                    <option value=\"false\" selected>no Delicado</option>\r\n                </select>\r\n\r\n                <p>Destinatario</p>\r\n                <p>\r\n                    <label htmlFor=\"nit_des\">NIT del Destinatario:</label>\r\n                    <input type=\"text\" id=\"nit_des\" />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"nombre_des\">Nombre del Destinatario:</label>\r\n                    <input type=\"text\" id=\"nombre_des\" name=\"nombre_des\" />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"dir_des\">Direccion del destinatario:</label>\r\n                    <input type=\"text\" id=\"dir_des\" name=\"dir_des\" />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"ciudad_des\">Ciudad de Destino:</label>\r\n                    <input type=\"text\" id=\"ciudad_des\" name=\"ciudad_des\" />\r\n                </p>\r\n\r\n                \r\n            </form>\r\n            <button onClick={info_form}>enviar</button>\r\n        \r\n        </>\r\n\r\n    )\r\n}\r\n*/\n\nexport function Prueba() {\n  _s();\n  const [Guias, setListado] = useState([]);\n  const rguias = {};\n  useEffect(() => {\n    const username = \"Liam\";\n    fetch(`http://localhost:8080/guias/todas/?username=${username}`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      mode: 'cors',\n      method: \"get\"\n    }).then(res => res.json())\n    //.then(res=> {console.log(res.guias.user_guias,typeof(res.guias.user_guias),res.guias.user_guias.length)})\n    .then(res => {\n      setListado(res.guias.user_guias);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" id \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"fecha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"estado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: Guias.map(guia => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", guia._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime\",\n            value: guia.fecha,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [guia.estado, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"botton\",\n            children: \"enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 29\n        }, this)]\n      }, guia._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 9\n  }, this);\n}\n_s(Prueba, \"UtrPu6287zPaQnXjUj/hB+l4kfk=\");\n_c = Prueba;\nvar _c;\n$RefreshReg$(_c, \"Prueba\");","map":{"version":3,"names":["React","useEffect","useState","Button","uri","Prueba","Guias","setListado","rguias","username","fetch","headers","mode","method","then","res","json","guias","user_guias","map","guia","_id","fecha","estado"],"sources":["/user/src/app/src/pages/listadoOrdenes/Prueba.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nconst uri=\"http://localhost:8080/\"\r\n\r\n/*\r\n// buscar una guia\r\n//prueba guia n 637c2641574384689ace7662\r\n// usuario geraldine\r\n\r\nexport const Prueba =  () => {\r\n    const buscarguia=async (e)=>{\r\n        e.preventDefault();\r\n        const guia={};\r\n        guia.username=\"geraldine\";\r\n        guia.id_guia=document.getElementById(\"trackNumber\").value;\r\n        console.log(guia);\r\n        await fetch(`${uri}guia/buscar/?username=${guia.username}&id_guia=${guia.id_guia}`,{\r\n        headers:{\"Content-Type\":\"application/json\"},\r\n        mode: 'cors',\r\n        method:\"get\",\r\n        }).then(res=> res.json())\r\n        .then(res=> {console.log(res)})\r\n        \r\n\r\n    }\r\n    return (\r\n    <>\r\n    <input id=\"trackNumber\" type=\"text\"></input>\r\n    <button onClick={buscarguia}>click</button>\r\n    \r\n    </>\r\n    );\r\n};\r\n\r\n*/\r\n\r\n\r\n/*\r\n//buscar la espesifica de un usuario especifico\r\nexport const Prueba=()=>{\r\n    const buscarguias=async (e)=>{\r\n        e.preventDefault();\r\n        const username=\"alex32api\";\r\n        await fetch(`http://localhost:8080/guias/todas/?username=${username}`,{\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            mode: 'cors',\r\n            method:\"get\",\r\n            }).then(res=> res.json())\r\n            .then(res=> {console.log(res)})\r\n        \r\n\r\n    }\r\n    return (\r\n    <>\r\n    <button onClick={buscarguias}>Buscar todas las guias </button>\r\n    </>\r\n    );\r\n}\r\n*/\r\n\r\n\r\n// login de usuario\r\n/*\r\nexport function Prueba(){\r\n    const  login= async (e)=>{\r\n        e.preventDefault();\r\n        const user={};\r\n        user.username=document.getElementById(\"username\").value;\r\n        user.pass=document.getElementById(\"pass\").value;\r\n        console.log(user)\r\n        await fetch(`${uri}login`,{\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            mode: 'cors',\r\n            method:\"post\",\r\n            body:JSON.stringify(user)\r\n            }).then(res=> res.json())\r\n            .then(res=> {console.log(res)})\r\n    }\r\n    return(\r\n        <>\r\n        <form>\r\n            <label htmlFor=\"username\"> nombre de usuario </label>\r\n            <input type=\"text\" id=\"username\" />\r\n            <label htmlFor=\"pass\"> contrase√±a </label>\r\n            <input type=\"password\" id=\"pass\" />\r\n            <button onClick={login}> enviar</button>\r\n        </form>\r\n               \r\n        </>\r\n\r\n\r\n    )\r\n\r\n}\r\n/*\r\n\r\n\r\n\r\n/*\r\n// registrar una orden\r\nexport const Prueba=()=>{\r\n    const  info_form= async (e)=>{\r\n        e.preventDefault();\r\n\r\n        const guia={};\r\n        guia.username=\"alex32api\"\r\n        guia.nit=document.getElementById(\"nit\").value;\r\n        guia.fecha=document.getElementById(\"fecha\").value;\r\n        guia.dir_recogida=document.getElementById(\"dir_recogida\").value;\r\n        guia.ciudad_recogida=document.getElementById(\"dir\").value;\r\n        guia.largo=document.getElementById(\"largo\").value;\r\n        guia.ancho=document.getElementById(\"ancho\").value;\r\n        guia.alto=document.getElementById(\"alto\").value;\r\n        guia.peso=document.getElementById(\"peso\").value;\r\n        guia.nombre_des=document.getElementById(\"nombre_des\").value;\r\n        guia.nit_des=document.getElementById(\"nit_des\").value;\r\n        guia.dir_des=document.getElementById(\"dir_des\").value;\r\n        guia.ciudad_des=document.getElementById(\"ciudad_des\").value;\r\n        guia.estado=\"Guardado\";\r\n        console.log(document.getElementById(\"delicado\").value)\r\n        if (document.getElementById(\"delicado\").value==\"true\"){\r\n            guia.delicado=true\r\n        }else{\r\n            guia.delicado=false\r\n        }\r\n\r\n        console.log(guia)\r\n        await fetch(`${uri}guia/agregar`,{\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            mode: 'cors',\r\n            method:\"post\",\r\n            body:JSON.stringify({guia})\r\n            }).then(res=> res.json())\r\n            .then(res=> {console.log(res)})\r\n\r\n    }  \r\n    return(\r\n        <>\r\n            <form id=\"form_guia\" > \r\n                <p>\r\n                    <label htmlFor=\"nit\">NIT del Remitente:</label>\r\n                    <input type=\"text\" id=\"nit\" name=\"nit\"/>\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"fecha\">Fecha de Recogida </label>\r\n                    <input type=\"datetime-local\" id=\"fecha\" name=\"fecha\"/>\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"dir\">Direccion de Recogida</label>\r\n                    <input type=\"text\" id=\"dir\" name=\"dir\" />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"dir_recogida\">Ciudad de Recogida </label>\r\n                    <input type=\"text\" id=\"dir_recogida\" name=\"dir_recogida\" />\r\n                </p>\r\n                <br></br>\r\n                <br></br>\r\n                <p>Medidas y especificaciones</p>\r\n                <p>\r\n                    <label htmlFor=\"largo\">largo:</label>\r\n                    <input type=\"number\" id=\"largo\" min=\"1\"  name=\"largo\"/>\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"ancho\">ancho:</label>\r\n                    <input type=\"number\" id=\"ancho\"  min=\"1\" name=\"ancho\"/>\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"alto\">alto</label>\r\n                    <input type=\"number\" id=\"alto\" min=\"1\" />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"peso\">peso (Kg)</label>\r\n                    <input type=\"number\" id=\"peso\" min=\"1\" name=\"peso\"/>\r\n                </p>\r\n\r\n              \r\n                <select name=\"delicado\" id=\"delicado\">\r\n                    <option value=\"true\">Delicado</option>\r\n                    <option value=\"false\" selected>no Delicado</option>\r\n                </select>\r\n\r\n                <p>Destinatario</p>\r\n                <p>\r\n                    <label htmlFor=\"nit_des\">NIT del Destinatario:</label>\r\n                    <input type=\"text\" id=\"nit_des\" />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"nombre_des\">Nombre del Destinatario:</label>\r\n                    <input type=\"text\" id=\"nombre_des\" name=\"nombre_des\" />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"dir_des\">Direccion del destinatario:</label>\r\n                    <input type=\"text\" id=\"dir_des\" name=\"dir_des\" />\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"ciudad_des\">Ciudad de Destino:</label>\r\n                    <input type=\"text\" id=\"ciudad_des\" name=\"ciudad_des\" />\r\n                </p>\r\n\r\n                \r\n            </form>\r\n            <button onClick={info_form}>enviar</button>\r\n        \r\n        </>\r\n\r\n    )\r\n}\r\n*/\r\n\r\n\r\n\r\nexport function Prueba() {\r\n    const [Guias, setListado] = useState([])\r\n    const rguias={}\r\n    useEffect(()=>{\r\n        const username=\"Liam\";\r\n        fetch(`http://localhost:8080/guias/todas/?username=${username}`,{\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            mode: 'cors',\r\n            method:\"get\",\r\n            }).then(res=> res.json())\r\n            //.then(res=> {console.log(res.guias.user_guias,typeof(res.guias.user_guias),res.guias.user_guias.length)})\r\n            .then(res=>{\r\n                \r\n                setListado(res.guias.user_guias)\r\n            })\r\n\r\n    },[])\r\n    \r\n\r\n\r\n    return(\r\n        <table className=\"table\">\r\n            <thead>\r\n            <tr>\r\n                <th> id </th>\r\n                <th>fecha</th>\r\n                <th>estado</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    Guias.map(guia=> <tr key={guia._id}>\r\n                            <td> {guia._id}</td>\r\n                            <td> <input type=\"datetime\" value={guia.fecha} readOnly/></td>\r\n                            <td>{guia.estado})</td>\r\n                            <td><button type=\"botton\">enviar</button></td>\r\n\r\n                        </tr>\r\n                    )\r\n                }\r\n            </tbody>\r\n\r\n        </table>\r\n        \r\n    )\r\n\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,iBAAiB;AAAC;AACzC,MAAMC,GAAG,GAAC,wBAAwB;;AAElrB,MAAM,CAACC,KAAK,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMM,MAAM,GAAC,CAAC,CAAC;EACfP,SAAS,CAAC,MAAI;IACV,MAAMQ,QAAQ,GAAC,MAAM;IACrBC,KAAK,CAAE,+CAA8CD,QAAS,EAAC,EAAC;MAC5DE,OAAO,EAAC;QAAC,cAAc,EAAC;MAAkB,CAAC;MAC3CC,IAAI,EAAE,MAAM;MACZC,MAAM,EAAC;IACP,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAGA,GAAG,CAACC,IAAI,EAAE;IACxB;IAAA,CACCF,IAAI,CAACC,GAAG,IAAE;MAEPR,UAAU,CAACQ,GAAG,CAACE,KAAK,CAACC,UAAU,CAAC;IACpC,CAAC,CAAC;EAEV,CAAC,EAAC,EAAE,CAAC;EAIL,oBACI;IAAO,SAAS,EAAC,OAAO;IAAA,wBACpB;MAAA,uBACA;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eACb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc,eACd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe;MAAA;QAAA;QAAA;QAAA;MAAA;IACd;MAAA;MAAA;MAAA;IAAA,QACG,eACR;MAAA,UAEQZ,KAAK,CAACa,GAAG,CAACC,IAAI,iBAAG;QAAA,wBACT;UAAA,gBAAMA,IAAI,CAACC,GAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eACpB;UAAA,6BAAK;YAAO,IAAI,EAAC,UAAU;YAAC,KAAK,EAAED,IAAI,CAACE,KAAM;YAAC,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAAE;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAC9D;UAAA,WAAKF,IAAI,CAACG,MAAM;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO,eACvB;UAAA,uBAAI;YAAQ,IAAI,EAAC,QAAQ;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAgB;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA,GAJ5BH,IAAI,CAACC,GAAG;QAAA;QAAA;QAAA;MAAA,QAMzB;IACR;MAAA;MAAA;MAAA;IAAA,QAED;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAIhB;AAAC,GA9CehB,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module"}